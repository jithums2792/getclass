{"version":3,"file":"ngx-mathjax.js","sources":["ng://ngx-mathjax/src/app/math-jax/math-jax.service.ts","ng://ngx-mathjax/src/app/math-jax/math-jax.directive.ts","ng://ngx-mathjax/src/app/math-jax/math-jax.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\n\n/**\n * Defines global variables on the `window` object.\n */\ndeclare global {\n  interface Window {\n    /**\n     * Subject to notify the readiness of the MathJax namespace.\n     */\n    mathJaxHub$: Subject<any>;\n  }\n}\n\n/**\n * A internal utility service.\n */\n@Injectable()\nexport class MathJaxService {\n\n  /**\n   * Signals when the MathJax object is ready.\n   */\n  public readonly MathJaxHub$ = new ReplaySubject<any>();\n\n  /**\n   * Must call `init` method explicitly during module initialization.\n   */\n  public init(): void {\n    /**\n     * Create a global variable.\n     */\n    window.mathJaxHub$ = this.MathJaxHub$;\n\n  }\n\n}\n","/**\n * @author davidshen84\n */\nimport { UpdateValue } from './domain/interfaces';\nimport { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { combineLatest, Observable, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { MathJaxService } from './math-jax.service';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Typeset the content or expressions using MathJax library.\n */\n@Directive({\n  selector: 'mathjax, [mathjax]'\n})\nexport class MathJaxDirective implements AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * An array of input MathJax expressions.\n   */\n  @Input('mathjax')\n  public MathJaxExpressions: string[];\n  private readonly mathJaxHub$: Observable<any>;\n  /**\n   * The associated native element.\n   */\n  private readonly element: HTMLElement;\n  /**\n   * Observes the change of the input expression.\n   */\n  private expressionChangeSubject = new ReplaySubject<UpdateValue<string>[]>();\n  /**\n   * Observes the completion of the initial MathJax typesetting.\n   */\n  private readonly mathJaxTypesetSubject = new Subject<any>();\n  private readonly expressionChangeSubscription: Subscription;\n  /**\n   * Observe the readiness of all the Jax instances in the element.\n   */\n  private readonly allJax$: Observable<any[]>;\n  private readonly typesetSubscription: Subscription;\n  private hubSubscription: Subscription;\n  private isDestroying: boolean;\n\n  constructor(el: ElementRef, service: MathJaxService) {\n    this.mathJaxHub$ = service.MathJaxHub$;\n    this.element = el.nativeElement;\n\n    this.typesetSubscription = combineLatest([this.mathJaxHub$, this.mathJaxTypesetSubject])\n      .subscribe(() => {\n        MathJax.Hub.Queue(['Typeset', MathJax.Hub, this.element]);\n      });\n\n    this.allJax$ = combineLatest([this.mathJaxHub$, this.mathJaxTypesetSubject]).pipe(\n      map(() => MathJax.Hub.getAllJax(this.element))\n    );\n\n    this.expressionChangeSubscription = combineLatest([this.allJax$, this.expressionChangeSubject])\n      .subscribe(([jax, updateValue]) =>\n        updateValue.forEach(v => MathJax.Hub.Queue(() => {\n          // Stop pushing messages to the queue when the component is being destroyed.\n          if (!this.isDestroying) {\n            return jax[v.order].Text(v.value);\n          }\n        })));\n  }\n\n  ngAfterViewInit(): void {\n    this.hubSubscription = this.mathJaxHub$\n      .subscribe(() => {\n        MathJax.Hub.Queue(['Typeset', MathJax.Hub, this.element]);\n        MathJax.Hub.Queue(['MathJaxTypeset', this]);\n      });\n  }\n\n  /**\n   * Explicitly trigger the MathJax typeset process.\n   *\n   * This is useful if the content is loaded dynamically.\n   */\n  MathJaxTypeset(): void {\n    this.mathJaxTypesetSubject.next();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const expressions = changes.MathJaxExpressions;\n\n    // Shortcut if there's nothing to update.\n    if (!(expressions.currentValue instanceof Array)) {\n      return;\n    }\n\n    // Update only the changed expressions.\n    const updateValues: UpdateValue<string>[] = expressions.currentValue\n      .map((cv, i) =>\n        (expressions.previousValue ? expressions.previousValue[i] !== cv : true) ?\n          {\n            value: expressions.currentValue[i],\n            order: i\n          }\n          : undefined)\n      .filter(v => v);\n    this.expressionChangeSubject.next(updateValues);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroying = true;\n\n    this.expressionChangeSubscription.unsubscribe();\n    this.hubSubscription.unsubscribe();\n    this.typesetSubscription.unsubscribe();\n\n    this.mathJaxTypesetSubject.complete();\n    this.expressionChangeSubject.complete();\n  }\n}\n","/**\n * @author davidshen84\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MathJaxDirective } from './math-jax.directive';\nimport { MathJaxService } from './math-jax.service';\n\n\n/**\n * Module configuration class.\n *\n * @example\n *\n * {\n *   version: '2.7.5',\n *   config: 'TeX-AMS_HTML',\n *   hostname: 'cdnjs.cloudflare.com'\n * }\n */\nexport class ModuleConfiguration {\n  /**\n   * The version of the MathJax library.\n   */\n  version: string;\n\n  /**\n   * The config name of the MathJax library.\n   * Please check the MathJax [documentation](https://docs.mathjax.org/en/latest/config-files.html) for all the configuration names.\n   */\n  config: string;\n\n  /**\n   * MathJax CDN hostname. Please check [here](https://docs.mathjax.org/en/latest/start.html#mathjax-cdn) for available CDN servers.\n   */\n  hostname: string;\n}\n\n/**\n * Module to load and configure the MathJax library.\n *\n * @example\n *\n * MathJaxModule.config(\n * {\n *     version: '2.7.5',\n *     config: 'TeX-AMS_HTML',\n *     hostname: 'cdnjs.cloudflare.com'\n * })\n */\n@NgModule({\n  declarations: [MathJaxDirective],\n  imports: [\n    CommonModule\n  ],\n  exports: [MathJaxDirective]\n})\nexport class MathJaxModule {\n\n  constructor(service: MathJaxService, moduleConfig?: ModuleConfiguration) {\n    service.init();\n\n    /**\n     * Define the **function string** to be inserted into the mathjax configuration script block.\n     */\n    const mathJaxHubConfig = (() => {\n      MathJax.Hub.Config({\n        skipStartupTypeset: true,\n        messageStyle: 'none',\n        tex2jax: {preview: 'none'}\n      });\n      MathJax.Hub.Register.StartupHook('End', () => {\n        window.mathJaxHub$.next();\n        window.mathJaxHub$.complete();\n      });\n    }).toString();\n\n    if (moduleConfig) {\n      /**\n       * Insert the MathJax configuration script into the Head element.\n       */\n      (function () {\n        const script = document.createElement('script') as HTMLScriptElement;\n        script.type = 'text/x-mathjax-config';\n        script.text = `(${mathJaxHubConfig})();`;\n        document.getElementsByTagName('head')[0].appendChild(script);\n      })();\n\n      /**\n       * Insert the script block to load the MathJax library.\n       */\n      (function (version: string, config: string, hostname: string) {\n        const script = document.createElement('script') as HTMLScriptElement;\n        script.type = 'text/javascript';\n        script.src = `https://${hostname}/ajax/libs/mathjax/${version}/MathJax.js?config=${config}`;\n        script.async = true;\n        document.getElementsByTagName('head')[0].appendChild(script);\n      })(moduleConfig.version, moduleConfig.config, moduleConfig.hostname);\n    }\n  }\n\n  /**\n   * Configure the provider for hte module.\n   *\n   * @deprecated Use forRoot or forChild method instead.\n   * @param forRoot Make sure it is set to `true` for the root module and `false` for any child module.\n   * @param moduleConfiguration A {ModuleConfiguration} instance.\n   */\n  public static config(forRoot: boolean = true, moduleConfiguration: ModuleConfiguration = {\n    version: '2.7.5',\n    config: 'TeX-AMS_HTML',\n    hostname: 'cdnjs.cloudflare.com'\n  }): ModuleWithProviders<MathJaxModule> {\n    return forRoot ? {\n      ngModule: MathJaxModule,\n      providers: [\n        {provide: ModuleConfiguration, useValue: moduleConfiguration},\n        {provide: MathJaxService, useClass: MathJaxService},\n      ]\n    } : {\n      ngModule: MathJaxModule\n    };\n  }\n\n  /**\n   * Configure the module for the root module.\n   *\n   * @param moduleConfiguration A {ModuleConfiguration} instance.\n   */\n  public static forRoot(moduleConfiguration: ModuleConfiguration = {\n    version: '2.7.5',\n    config: 'TeX-AMS_HTML',\n    hostname: 'cdnjs.cloudflare.com'\n  }): ModuleWithProviders<MathJaxModule> {\n    return {\n      ngModule: MathJaxModule,\n      providers: [\n        {provide: ModuleConfiguration, useValue: moduleConfiguration},\n        {provide: MathJaxService, useClass: MathJaxService},\n      ]\n    };\n  }\n\n  /**\n   * Configure the module for a child module.\n   */\n  public static forChild() {\n    return {\n      ngModule: MathJaxModule\n    };\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}